<?php
// $Id$

function openabmma_install() {
    drupal_set_message( t('Beginning installation of openabmma module') );
    switch ($GLOBALS['db_type']) {
        case 'mysql':
        case 'mysqli':
            // create model project table.  Stores all metadata associated
            // with a model project in the model archive.  Every project has
            // a single associated owner.
            db_query("CREATE TABLE openabm_model_project (
		id		INT(10) UNSIGNED AUTO_INCREMENT NOT NULL,
                owner_uid       INT(10) UNSIGNED NOT NULL,
                name            VARCHAR(255) NOT NULL,
                description     MEDIUMTEXT NOT NULL,
		visible		bool default 0,
                license_id      TINYINT UNSIGNED NOT NULL,
                PRIMARY KEY(id),
                FOREIGN KEY (owner_uid) REFERENCES user(uid),
                FOREIGN KEY (license_id) REFERENCES openabm_license(id)
                );");
            // create pivot table for members of an ABM project

            db_query("CREATE TABLE openabm_model_project_member (
		id		INT(10) UNSIGNED AUTO_INCREMENT NOT NULL,
                project_id      INT(10) UNSIGNED NOT NULL,
                user_id         INT(10) UNSIGNED NOT NULL,
                role            INT(10) UNSIGNED NOT NULL,
                PRIMARY KEY (id),
                FOREIGN KEY (project_id) REFERENCES openabm_model_project(id)
                    ON DELETE CASCADE,
                FOREIGN KEY (user_id) REFERENCES users(uid) ON DELETE CASCADE,
                FOREIGN KEY (role) REFERENCES openabm_roles(id)
                );");

            db_query("CREATE TABLE openabm_role (
		id		INT(10) UNSIGNED AUTO_INCREMENT NOT NULL,
		name		VARCHAR(255) NOT NULL,
                PRIMARY KEY (id)
                );");

            // create license table
            db_query("CREATE TABLE openabm_license (
                id INT(10) UNSIGNED AUTO_INCREMENT NOT NULL,
                license MEDIUMTEXT NOT NULL,
                url     TEXT,
                PRIMARY KEY(id)
                );");
            break;
        case 'pgsql':
        default:
            drupal_set_message( t('Unsupported database.') );
    }

}

