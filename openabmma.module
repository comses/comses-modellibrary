<?php
// vim:sts=2:sw=2:filetype=php
// $Id$

/**
 * @file
 * 
 * Provides an agent based model archive within the Drupal framework.  This
 * involves the user creation of new model projects, ability to upload new
 * versions of an ABM project and edit associated metadata.  Members of a
 * review committee should also be able to "star" an ABM project to signify
 * its level of maturity and completeness.
 */
 define('MODEL_DIRECTORY', 'model-archive/');

include 'admin.php';
include 'classes.php';
include 'drupal.php';
include 'files.php';
include 'misc.php';
include 'model.php';
include 'review.php';
include 'version.php';

function openabmma_showProjects ()
{
  global $user;

  $count = 0;
  $output .= '<br/><b>Your submitted models:</b><hr/><br/>';
  $query = "SELECT m.name, m.title, m.owner_uid, m.replicatedModel, m.replicators FROM openabm_model m WHERE m.owner_uid=%d";
#  $output .= "what is: " . ${model}->getId();
  /*
    $query = "SELECT owner_uid, name, title, replicatedModel, replicators, reference from openabm_model WHERE name='%s'";
    $result = (array) db_fetch_object (db_query ($query, $modelName));
    $owner_uid = $result ['owner_uid'];
    $name = $result ['name'];
    $title = $result ['title'];
    $replicated = $result ['replicatedModel'] == "1" ? "Yes" : "No";
    $replicators = $result ['replicators'];
    $reference_url = $result ['reference'];

    // FIXME: hacky, use split/join instead and an array.
    $keywordList = '';
    $query = "SELECT keyword FROM openabm_model_keywords WHERE model_id=%d";
    $result = db_query ($query, openabmma_getModelId ($modelName));
    while ($element = db_fetch_object ($result))
        $keywordList .= $element->keyword . ", ";
    $keywordList = substr ($keywordList, 0, strlen($keywordList)-2);

    $header = array( 'Name/URL', 'Owner', 'Title', 'Replicated?');
    $data = array(
                array($name, openabmma_getModelOwner($name), $title,
                $replicated));
    if ($replicated == "Yes") {
        array_push($header, 'Other Authors', 'Reference / URL', 'Keywords');
        array_push($data[0], $replicators, $reference_url, $keywordList);
    }

    $output .= theme_table($header, $data);


    if ($owner == $user->name)
    {
        $output .= '(' . l('Change model metadata', 'models/edit/' . $modelName);
        $output .= ' | ' . l('Manage members of this model', MODEL_DIRECTORY . $modelName . '/members') . ')';
    }
    */


  $result = db_query ($query, $user->uid);
  while ($node = db_fetch_object ($result))
  {
    $count++;
    $output .= "<b>" . l ($node->title . " (" . $node->name . ")", MODEL_DIRECTORY . $node->name) . "</b>&nbsp;";

    $output .= "&nbsp;<br/><small>" . $node->description . "<hr/>";
    $output .= "</small><br/>";
  }

  $output .= "You have submitted <b>" . $count . "</b> model(s).<br/>&nbsp;<br/>";
  $count = 0;

  $output .= '<br/><b>Other models:</b><hr/><br/>';
  $query = "SELECT m.owner_uid, m.name, m.title, B.role 
    FROM openabm_model m INNER JOIN openabm_model_member B ON m.id=B.project_id
    WHERE B.user_id=%d";
  $result = db_query ($query, $user->uid);
  while ($node = db_fetch_object ($result))
  {
    $count++;
    $owner = openabmma_getUserName ($node->owner_uid);
    $output .= "<b>" . l ($node->title . " (" . $node->name . ")", MODEL_DIRECTORY . $node->name) . "</b>&nbsp;";

    if ($node->visible == 1)	$output .= "[Public]";
    else				$output .= "[Private]";

    $output .= "&nbsp;<br/><small>" . $node->description . "<br/>";
    $output .= "Owned by: <b>" . $owner . "</b></small><hr/><br/>";
  }

  $output .= "You are a member of <b>" . $count . "</b> model(s).<br/>&nbsp;<br/>";
  $output .= "<br/>" . l ("To submit a new model, please click here", "models/add");
  return $output;
}

function openabmma_browseModels ()
{
  $query = "SELECT owner_uid, name, title FROM openabm_model ORDER BY name";
  $result = db_query ($query);

  while ($model = db_fetch_object ($result))
  {
    $pId = $model->id;
    $modelName = $model->name;
    $pTitle = $model->title;
    $owner_uid = $model->owner_uid;

    $count++;
    $output .= l ($pTitle . " [" . $modelName . "]", MODEL_DIRECTORY . $modelName) . "<br/><small>Owner: " . openabmma_getUserName ($owner_uid) . "</small>&nbsp;<br/>";
  }

  if ($count) {
    $output = "<hr/>" . $count . " model(s) available.<br/>&nbsp;<br/>" . $output;
  }
  else {
    $output = "<hr/>No models available.";
  }
  return $output;
}

?>
